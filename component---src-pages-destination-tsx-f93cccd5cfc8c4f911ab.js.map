{"version":3,"file":"component---src-pages-destination-tsx-f93cccd5cfc8c4f911ab.js","mappings":"wLAAA,EAAe,IAA0B,6ECAzC,EAAe,IAA0B,4ECAzC,EAAe,IAA0B,4E,wCCUnCA,EAAmB,CAAEC,QAASC,EAAcC,OAAQC,EAAaC,OAAQC,GAEzEC,EAAuBC,EAAAA,GAAAA,IAAAA,WAAH,6EAAGA,CAAH,8LASHC,EAAAA,EAAAA,IAMjBC,EAA8BF,EAAAA,GAAAA,IAAAA,WAAH,oFAAGA,CAAH,8FAU3BG,EAAcH,EAAAA,GAAAA,IAAAA,WAAH,oEAAGA,CAAH,aAIXI,EAA8BJ,EAAAA,GAAAA,IAAAA,WAAH,oFAAGA,CAAH,sFAQ3BK,EAAqBL,EAAAA,GAAAA,IAAAA,WAAH,2EAAGA,CAAH,gUAiBDC,EAAAA,EAAAA,IAOjBK,EAAiBN,EAAAA,GAAAA,GAAAA,WAAH,uEAAGA,CAAH,yMAYGC,EAAAA,EAAAA,IAIjBM,EAAqBP,EAAAA,GAAAA,GAAAA,WAAH,2EAAGA,CAAH,seAaX,qBAAGQ,SAA2B,UAAY,aAWtC,qBAAGA,SAA2B,UAAY,SASpCP,EAAAA,EAAAA,IAQjBQ,EAAqBT,EAAAA,GAAAA,IAAAA,WAAH,2EAAGA,CAAH,iKAGDC,EAAAA,EAAAA,GAKAA,EAAAA,EAAAA,IAMjBS,EAA4BV,EAAAA,GAAAA,IAAAA,WAAH,kFAAGA,CAAH,iMASRC,EAAAA,EAAAA,IAMjBU,EAAWX,EAAAA,GAAAA,EAAAA,WAAH,iEAAGA,CAAH,qLAQSC,EAAAA,EAAAA,IAOjBW,EAAwBZ,EAAAA,GAAAA,IAAAA,WAAH,+EAAGA,CAAH,yJAOJC,EAAAA,EAAAA,IAKjBY,EAAmBb,EAAAA,GAAAA,IAAAA,WAAH,0EAAGA,CAAH,6FAUhBc,EAAsBd,EAAAA,GAAAA,IAAAA,WAAH,6EAAGA,CAAH,uKAanBe,EAAgBf,EAAAA,GAAAA,EAAAA,WAAH,uEAAGA,CAAH,wJAqEnB,EApDoB,WAClB,OAAgCgB,EAAAA,EAAAA,UAAS,QAAlCR,EAAP,KAAiBS,EAAjB,KACMC,ECnNuB,WAC7B,IAAMC,GAAOC,EAAAA,EAAAA,gBAAe,aAyBtBF,EAA8B,GAGpC,OADAC,EAAKE,SAASH,aAAaI,SAAQ,SAACC,GAAD,OAAsBL,EAAaK,EAAEC,MAAQD,KACzEL,EDsLcO,GACfC,EAAcR,EAAaV,GAcjC,OACE,gBAACmB,EAAA,EAAD,CAAQC,YAAY,cAAcC,OAAQrC,GACxC,gBAACO,EAAD,KACE,gBAACM,EAAD,KACE,kCADF,0BAGA,gBAACH,EAAD,KACE,gBAACC,EAAD,KACE,gBAACM,EAAD,KACE,gBAAC,EAAAqB,EAAD,CAAaC,OAAOC,EAAAA,EAAAA,GAASN,EAAYG,OAAOI,MAAQC,IAAI,WAGhE,gBAAC/B,EAAD,KACE,gBAACC,EAAD,KACE,gBAACE,EAAD,KAzBH6B,OAAOC,OAAOlB,GAAcmB,KAAI,SAACd,GAAD,OACrC,gBAAChB,EAAD,CACE+B,QAAS,kBAAMrB,EAAYM,EAAEC,OAC7BhB,SAAUe,EAAEC,OAAShB,EACrB+B,IAAK,mBAAqBhB,EAAEC,MAE5B,gCAAQD,EAAEC,WAoBJ,gBAACd,EAAD,KAA4BgB,EAAYF,MACxC,gBAACb,EAAD,KAAWe,EAAYc,aACvB,gBAAC5B,EAAD,KACE,gBAACC,EAAD,KACE,gBAACC,EAAD,qBACA,gBAACC,EAAD,SAAiBW,EAAYe,WAE/B,gBAAC5B,EAAD,KACE,gBAACC,EAAD,yBACA,gBAACC,EAAD,KAAgBW,EAAYgB","sources":["webpack://space-tourism/./src/assets/destination/background-destination-desktop.jpg","webpack://space-tourism/./src/assets/destination/background-destination-tablet.jpg","webpack://space-tourism/./src/assets/destination/background-destination-mobile.jpg","webpack://space-tourism/./src/pages/destination.tsx","webpack://space-tourism/./src/hooks/useDestinations.ts"],"sourcesContent":["export default __webpack_public_path__ + \"static/background-destination-desktop-468b922c69bf5499b4bc37fc385ea6b5.jpg\";","export default __webpack_public_path__ + \"static/background-destination-tablet-8f55d346d8b6cfd95ab76d600d80566a.jpg\";","export default __webpack_public_path__ + \"static/background-destination-mobile-e0131e27e751ead1a922c013f5dda715.jpg\";","import React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport DesktopImage from '../assets/destination/background-destination-desktop.jpg';\nimport TabletImage from '../assets/destination/background-destination-tablet.jpg';\nimport MobileImage from '../assets/destination/background-destination-mobile.jpg';\nimport { useDestinations } from '../hooks/useDestinations';\nimport styled from 'styled-components';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { breakpoints } from '../components/utilities/breakpoint';\n\nconst backgroundImages = { desktop: DesktopImage, tablet: TabletImage, mobile: MobileImage };\n\nconst DestinationContainer = styled.div`\n  padding-top: 30vh;\n  margin: 0 auto;\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    padding-top: 12vh;\n  }\n  @media (max-width: ${breakpoints.sm}) {\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst DestinationContentContainer = styled.div`\n  display: flex;\n\n  gap: 10%;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst ContentItem = styled.div`\n  flex: 1;\n`;\n\nconst DestinationDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    align-items: center;\n  }\n`;\n\nconst DestinationHeading = styled.div`\n  font-family: Barlow Condensed;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 28px;\n  line-height: 34px;\n\n  letter-spacing: 4.725px;\n  color: #ffffff;\n  > span {\n    letter-spacing: 4.725px;\n    color: #ffffff;\n    mix-blend-mode: normal;\n    opacity: 0.25;\n  }\n  text-transform: uppercase;\n\n  @media (max-width: ${breakpoints.sm}) {\n    font-size: 16px;\n    line-height: 19px;\n    letter-spacing: 2.7px;\n  }\n`;\n\nconst DestinationBar = styled.ul`\n  width: 80%;\n  display: flex;\n  list-style-type: none;\n  padding: 0;\n  margin-bottom: 10%;\n  @media (max-width: 768px) {\n    margin-top: 50px;\n    justify-content: center;\n    align-items: center;\n  }\n\n  @media (max-width: ${breakpoints.sm}) {\n    margin-top: 25px;\n  }\n`;\nconst DestinationBarItem = styled.li<DestinationBarItemProps>`\n  flex: 1;\n  font-family: Barlow Condensed;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 19px;\n  letter-spacing: 2.7px;\n\n  > span {\n    position: relative;\n    text-transform: uppercase;\n    text-align: center;\n    color: ${({ selected }) => (selected ? '#ffffff' : '#d0d6f9')};\n\n    ::after {\n      content: '';\n      position: absolute;\n      height: 3px;\n      background: #ffffff;\n\n      bottom: -15px;\n      left: 0;\n      right: 0;\n      display: ${({ selected }) => (selected ? 'initial' : 'none')};\n    }\n  }\n  @media (max-width: 768px) {\n    display: flex;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n\n  @media (max-width: ${breakpoints.sm}) {\n    font-size: 14px;\n    line-height: 17px;\n\n    letter-spacing: 2.3625px;\n  }\n`;\n\nconst GatsbyImageWrapper = styled.div`\n  padding-top: 10%;\n\n  @media (min-width: ${breakpoints.sm}) and (max-width: 768px) {\n    padding-left: 15%;\n    padding-right: 15%;\n  }\n\n  @media (max-width: ${breakpoints.sm}) {\n    padding-left: 20%;\n    padding-right: 20%;\n  }\n`;\n\nconst DestinationDetailsHeading = styled.div`\n  font-family: Bellefair;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 100px;\n  line-height: 115px;\n  text-transform: uppercase;\n  color: #ffffff;\n\n  @media (max-width: ${breakpoints.sm}) {\n    font-size: 56px;\n    line-height: 64px;\n  }\n`;\n\nconst DetailsP = styled.p`\n  font-family: Barlow;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 32px;\n  color: #d0d6f9;\n\n  @media (max-width: ${breakpoints.sm}) {\n    font-size: 15px;\n    line-height: 25px;\n    text-align: center;\n  }\n`;\n\nconst DetailsStatsContainer = styled.div`\n  display: flex;\n  margin-top: 50px;\n  padding-top: 20px;\n  border-top: 1px solid #383b4b;\n  width: 100%;\n\n  @media (max-width: ${breakpoints.sm}) {\n    margin-top: 10px;\n    flex-direction: column;\n  }\n`;\nconst DetailsStatsItem = styled.div`\n  flex: 1;\n\n  @media (max-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst DetailsStatsHeading = styled.div`\n  font-family: Barlow Condensed;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 17px;\n\n  letter-spacing: 2.3625px;\n  text-transform: uppercase;\n\n  color: #d0d6f9;\n`;\n\nconst DetailsStatsP = styled.p`\n  font-family: Bellefair;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 28px;\n  line-height: 32px;\n  margin-top: 10px;\n  text-transform: uppercase;\n\n  color: #ffffff;\n`;\n\ninterface DestinationBarItemProps {\n  selected: boolean;\n  onClick: () => void;\n}\n\nconst Destination = () => {\n  const [selected, setSelected] = useState('Moon');\n  const destinations = useDestinations();\n  const destination = destinations[selected];\n\n  const renderDestinationBarItems = () => {\n    return Object.values(destinations).map((d) => (\n      <DestinationBarItem\n        onClick={() => setSelected(d.name)}\n        selected={d.name === selected}\n        key={'destination-bar-' + d.name}\n      >\n        <span> {d.name}</span>\n      </DestinationBarItem>\n    ));\n  };\n\n  return (\n    <Layout currentPage=\"destination\" images={backgroundImages}>\n      <DestinationContainer>\n        <DestinationHeading>\n          <span>01</span> Pick Your Destination\n        </DestinationHeading>\n        <DestinationContentContainer>\n          <ContentItem>\n            <GatsbyImageWrapper>\n              <GatsbyImage image={getImage(destination.images.webp)!} alt=\"Moon\" />\n            </GatsbyImageWrapper>\n          </ContentItem>\n          <ContentItem>\n            <DestinationDetailsContainer>\n              <DestinationBar>{renderDestinationBarItems()}</DestinationBar>\n              <DestinationDetailsHeading>{destination.name}</DestinationDetailsHeading>\n              <DetailsP>{destination.description}</DetailsP>\n              <DetailsStatsContainer>\n                <DetailsStatsItem>\n                  <DetailsStatsHeading>Avg Distance</DetailsStatsHeading>\n                  <DetailsStatsP> {destination.distance}</DetailsStatsP>\n                </DetailsStatsItem>\n                <DetailsStatsItem>\n                  <DetailsStatsHeading>Est. Travel Time</DetailsStatsHeading>\n                  <DetailsStatsP>{destination.travel}</DetailsStatsP>\n                </DetailsStatsItem>\n              </DetailsStatsContainer>\n            </DestinationDetailsContainer>\n          </ContentItem>\n        </DestinationContentContainer>\n      </DestinationContainer>\n    </Layout>\n  );\n};\n\nexport default Destination;\n","import { graphql, useStaticQuery } from 'gatsby';\n\ninterface IDestinations {\n  [key: string]: IDestination;\n}\n\nexport interface IDestination {\n  description: string;\n  distance: string;\n  images: {\n    png: any;\n    webp: any;\n  };\n  name: string;\n  travel: string;\n}\n\nexport const useDestinations = () => {\n  const data = useStaticQuery(graphql`\n    {\n      dataJson {\n        destinations {\n          description\n          distance\n          images {\n            png {\n              childImageSharp {\n                gatsbyImageData(placeholder: NONE)\n              }\n            }\n            webp {\n              childImageSharp {\n                gatsbyImageData(placeholder: NONE)\n              }\n            }\n          }\n          name\n          travel\n        }\n      }\n    }\n  `);\n\n  const destinations: IDestinations = {};\n\n  data.dataJson.destinations.forEach((d: IDestination) => (destinations[d.name] = d));\n  return destinations;\n};\n"],"names":["backgroundImages","desktop","DesktopImage","tablet","TabletImage","mobile","MobileImage","DestinationContainer","styled","breakpoints","DestinationContentContainer","ContentItem","DestinationDetailsContainer","DestinationHeading","DestinationBar","DestinationBarItem","selected","GatsbyImageWrapper","DestinationDetailsHeading","DetailsP","DetailsStatsContainer","DetailsStatsItem","DetailsStatsHeading","DetailsStatsP","useState","setSelected","destinations","data","useStaticQuery","dataJson","forEach","d","name","useDestinations","destination","Layout","currentPage","images","G","image","getImage","webp","alt","Object","values","map","onClick","key","description","distance","travel"],"sourceRoot":""}